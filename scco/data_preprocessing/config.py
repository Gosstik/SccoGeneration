import os


def from_env(var_name):
    if var_name in os.environ:
        return os.environ[var_name]
    print(f"Warning: environment variable {var_name} not found, setting to None")
    return None


RABBIT_ADDRESS = from_env('RMQ_NET_ALIAS')

if RABBIT_ADDRESS is not None:
    IN_EXCHANGE = from_env('DATA_PREPROCESSING_EXCHANGE')
    IN_QUEUE = from_env('DATA_PREPROCESSING_QUEUE')
    IN_ROUTING_KEY = from_env('DATA_PREPROCESSING_ROUTING_KEY')

    DB_FUNCTIONAL_SERVICE_EXCHANGE = from_env('DB_FUNCTIONAL_SERVICE_EXCHANGE')
    DB_FUNCTIONAL_SERVICE_QUEUE = from_env('DB_FUNCTIONAL_SERVICE_QUEUE')
    DB_FUNCTIONAL_SERVICE_ROUTING_KEY = from_env('DB_FUNCTIONAL_SERVICE_ROUTING_KEY')

    ML_GENERATION_EXCHANGE = from_env('ML_GENERATION_EXCHANGE')
    ML_GENERATION_QUEUE = from_env('ML_GENERATION_QUEUE')
    ML_GENERATION_ROUTING_KEY = from_env('ML_GENERATION_ROUTING_KEY')

    CONTAINS_REQUEST_EXCHANGE = IN_EXCHANGE  # IN_EXCHANGE + '_contains'
    CONTAINS_REQUEST_QUEUE = IN_QUEUE + '_contains'
    CONTAINS_REQUEST_ROUTING_KEY = IN_ROUTING_KEY + '_contains'

    PARSER_BOT_CSV_FOLDER = from_env('PARSER_BOT_CSV_VOLUME_PATH')
    NEW_QUERIES_CSV_FOLDER = from_env('UNPROCESSED_PARSER_BOT_CSV_VOLUME_PATH')

    INSERT_NEW_QUERIES_REQUEST_EXCHANGE = IN_EXCHANGE
    INSERT_NEW_QUERIES_REQUEST_QUEUE = IN_QUEUE + '_insert_csv'
    INSERT_NEW_QUERIES_REQUEST_ROUTING_KEY = IN_ROUTING_KEY + '_insert_csv'

    CUSTOMER_LISTS_REQUEST_EXCHANGE = IN_EXCHANGE
    CUSTOMER_LISTS_REQUEST_QUEUE = IN_QUEUE + '_lists'
    CUSTOMER_LISTS_REQUEST_ROUTING_KEY = IN_ROUTING_KEY + '_lists'

    INSERT_RESULT_REQUEST_EXCHANGE = IN_EXCHANGE
    INSERT_RESULT_REQUEST_QUEUE = IN_QUEUE + '_insert_result'
    INSERT_RESULT_REQUEST_ROUTING_KEY = IN_ROUTING_KEY + '_insert_result'
