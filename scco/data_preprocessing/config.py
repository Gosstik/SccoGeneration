import os

STRONG_BLACKLIST_PATH = 'resources/trusted_strong_blacklist.txt'
STRONG_WHITELIST_PATH = 'resources/trusted_strong_whitelist.txt'
WEAK_BLACKLIST_PATH = 'resources/trusted_weak_blacklist.txt'
WEAK_WHITELIST_PATH = 'resources/trusted_weak_whitelist.txt'
SWEAR_WORDS_BLACKLIST_PATH = 'resources/swear_words_blacklist.txt'

REMOVE_HASHTAGS_ENTIRELY = False

DEBUG_ISOLATED = False


def from_env(var_name, default=''):
    if var_name in os.environ:
        return os.environ[var_name]
    print(f"Warning: environment variable {var_name} not found, setting to {repr(default)}")
    return default


RABBIT_ADDRESS = from_env('RMQ_NET_ALIAS')

IN_EXCHANGE = from_env('DATA_PREPROCESSING_EXCHANGE')
IN_QUEUE = from_env('DATA_PREPROCESSING_QUEUE')
IN_ROUTING_KEY = from_env('DATA_PREPROCESSING_ROUTING_KEY')

DB_FUNCTIONAL_SERVICE_EXCHANGE = from_env('DB_FUNCTIONAL_SERVICE_EXCHANGE')
DB_FUNCTIONAL_SERVICE_QUEUE = from_env('DB_FUNCTIONAL_SERVICE_QUEUE')
DB_FUNCTIONAL_SERVICE_ROUTING_KEY = from_env('DB_FUNCTIONAL_SERVICE_ROUTING_KEY')

ML_GENERATION_EXCHANGE = from_env('ML_GENERATION_EXCHANGE')
ML_GENERATION_QUEUE = from_env('ML_GENERATION_QUEUE')
ML_GENERATION_ROUTING_KEY = from_env('ML_GENERATION_ROUTING_KEY')

PARSER_BOT_CSV_FOLDER = from_env('PARSER_BOT_CSV_VOLUME_PATH', '../../volumes/parser_bot_csv')
NEW_QUERIES_CSV_FOLDER = from_env('UNPROCESSED_PARSER_BOT_CSV_VOLUME_PATH', 'temp')

CONTAINS_REQUEST_EXCHANGE = IN_EXCHANGE
CONTAINS_REQUEST_QUEUE = IN_QUEUE + '_contains'
CONTAINS_REQUEST_ROUTING_KEY = IN_ROUTING_KEY + '_contains'

INSERT_NEW_QUERIES_REQUEST_EXCHANGE = IN_EXCHANGE
INSERT_NEW_QUERIES_REQUEST_QUEUE = IN_QUEUE + '_insert_csv'
INSERT_NEW_QUERIES_REQUEST_ROUTING_KEY = IN_ROUTING_KEY + '_insert_csv'

CUSTOMER_LISTS_REQUEST_EXCHANGE = IN_EXCHANGE
CUSTOMER_LISTS_REQUEST_QUEUE = IN_QUEUE + '_lists'
CUSTOMER_LISTS_REQUEST_ROUTING_KEY = IN_ROUTING_KEY + '_lists'

INSERT_RESULT_REQUEST_EXCHANGE = IN_EXCHANGE
INSERT_RESULT_REQUEST_QUEUE = IN_QUEUE + '_insert_result'
INSERT_RESULT_REQUEST_ROUTING_KEY = IN_ROUTING_KEY + '_insert_result'
