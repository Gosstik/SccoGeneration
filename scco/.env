# Predefined environment variables: https://docs.docker.com/compose/environment-variables/envvars/
# Syntax for environment files: https://docs.docker.com/compose/environment-variables/env-file/

# Change for test several docker-compose.
OUTSIDE_PROJECT_NAME=scco_rmq

################################################################################
#### Change to create new service with the same docker-compose file.
################################################################################

COMPOSE_PROJECT_NAME=scco_debug
COMPOSE_FILE=docker-compose.yml

################################################################################
#### Set up on server.
################################################################################

# Network where RabbitMQ is working (services will enable to it).
RMQ_NET="${OUTSIDE_PROJECT_NAME}_network"

# Services use that network alias and port to contact with RabbitMQ.
RMQ_NET_ALIAS=rabbitmq

# Path to volume where .csv file is stored.
# Bot sends message relative to that path.
OUTSIDE_CSV_VOLUME="../outside/outside_volume"

# Service that sends .csv files.
CLIENT_QUERIES_NET_ALIAS="${OUTSIDE_PROJECT_NAME}_client_queries"
CLIENT_QUERIES_EXCHANGE="${OUTSIDE_PROJECT_NAME}_client_queries_exchange"
CLIENT_QUERIES_QUEUE="${OUTSIDE_PROJECT_NAME}_client_queries_queue"
CLIENT_QUERIES_ROUTING_KEY="${OUTSIDE_PROJECT_NAME}_client_queries_rk"

# Service that accepts generated pdf files.
GENERATED_OFFERS_NET_ALIAS="${OUTSIDE_PROJECT_NAME}_generated_offers"
GENERATED_OFFERS_EXCHANGE="${OUTSIDE_PROJECT_NAME}_generated_offers"
GENERATED_OFFERS_QUEUE="${OUTSIDE_PROJECT_NAME}_generated_offers_queue"
GENERATED_OFFERS_ROUTING_KEY="${OUTSIDE_PROJECT_NAME}_generated_offers"

################################################################################
#### Internal variables.
################################################################################

# Network for inner services communication (e.g. with database).
INT_NET="${COMPOSE_PROJECT_NAME}_network"

# Folder inside data_preprocessing_microservice docker container where
# it can access .csv file.
OUTSIDE_CSV_VOLUME_DOCKER_FOLDER="/volume/"

# data_preprocessing_microservice
DATA_PREPROCESSING_NET_ALIAS="${COMPOSE_PROJECT_NAME}_data_preprocessing"
#DATA_PREPROCESSING_EXCHANGE="${COMPOSE_PROJECT_NAME}_data_preprocessing_exchange"
#DATA_PREPROCESSING_QUEUE="${COMPOSE_PROJECT_NAME}_data_preprocessing_queue"
#DATA_PREPROCESSING_ROUTING_KEY="${COMPOSE_PROJECT_NAME}_data_preprocessing_rk"

# ml_microservice
ML_NET_ALIAS="${COMPOSE_PROJECT_NAME}_ml"
ML_EXCHANGE="${COMPOSE_PROJECT_NAME}_ml_exchange"
ML_QUEUE="${COMPOSE_PROJECT_NAME}_ml_queue"
ML_ROUTING_KEY="${COMPOSE_PROJECT_NAME}_ml_rk"

# crud_microservice
CRUD_NET_ALIAS="${COMPOSE_PROJECT_NAME}_pdf"
CRUD_EXCHANGE="${COMPOSE_PROJECT_NAME}_pdf_exchange"
CRUD_QUEUE="${COMPOSE_PROJECT_NAME}_pdf_queue"
CRUD_ROUTING_KEY="${COMPOSE_PROJECT_NAME}_pdf_rk"

# pdf_microservice
PDF_NET_ALIAS="${COMPOSE_PROJECT_NAME}_pdf"
#PDF_EXCHANGE="${COMPOSE_PROJECT_NAME}_pdf_exchange"
#PDF_QUEUE="${COMPOSE_PROJECT_NAME}_pdf_queue"
#PDF_ROUTING_KEY="${COMPOSE_PROJECT_NAME}_pdf_rk"
